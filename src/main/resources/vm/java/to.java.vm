package ${packageName}.domain;

#foreach ($import in $importList)
import ${import};
#end
import java.util.List;
import cn.cxyfyf.base.utils.StringUtils;
import cn.cxyfyf.base.framework.exception.FieldException;
import cn.cxyfyf.base.framework.web.domain.BaseDTO;
import lombok.Getter;
import lombok.Setter;

/**
 * ${functionName}接收对象 ${tableName}
 * 
 * @author ${author}
 * @date ${datetime}
 */

@Getter
@Setter
public class ${className}To extends BaseDTO {
#set($cxclude = ["id", "createBy", "createTime", "updateBy", "updateTime"])

private static final long serialVersionUID = -1L;

#foreach ($column in $columns)
#if(!$cxclude.contains($column.javaField))
    /** $column.columnComment */
#if($column.javaType == 'Date')
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
#end
    private $column.javaType $column.javaField;
#end
#end

    public ${className}To (){}

    /**
     * 判断不能为空
     * @param to 接收对象
     * @param fields 需要校验的字符串 例 id,name
     */
    public static void judgeParam(${className}To to, String fields){
        List<String> fieldList = Arrays.stream(fields.split(",")).filter(StringUtils::isNotEmpty).map(String::trim).distinct().collect(Collectors.toList());
        if (CollectionUtils.isEmpty(fieldList)) return;
#foreach ($column in $columns)
#if($column.javaType != 'String')
        if (fieldList.contains("$column.javaField") && Objects.isNull(to.get$column.javaFirstField ())) throw new FieldException("$column.columnComment 不能为空");
#else
        if (fieldList.contains("$column.javaField") && StringUtils.isEmpty(to.get$column.javaFirstField ())) throw new FieldException("$column.columnComment 不能为空");
#end
#end
    }



}
